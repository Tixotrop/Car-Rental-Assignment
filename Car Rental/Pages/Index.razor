@page "/"
@using Car_Rental.Business.Classes
@using Car_Rental.Common.Classes;
@using Car_Rental.Common.Interfaces;
@inject BookingProcessor bp

<PageTitle>Car Rental Assignment</PageTitle>

<h1>Car Rental Assignment</h1>

<h2>Vehicles</h2>
<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">RegNo</th>
            <th scope="col">Make</th>
            <th scope="col">Odometer</th>
            <th scope="col">Cost km</th>
            <th scope="col">Vehicle type</th>
            <th scope="col">$ Day</th>
            <th scope="col">Status</th>
        </tr>
    </thead>
    <tbody>
        @foreach (IVehicle v in bp.GetVehicles(VehicleStatuses.Available))
        {
            <tr>
                <td class="fw-bold">@v.RegNo</td>
                <td>@v.Make</td>
                <td>@v.Odometer</td>
                <td>@v.CostKM</td>
                <td>@v.VehicleType.ToString()</td>
                <td>@v.CostPerDay</td>
                <td>
                    <span class="badge @(v.Status==VehicleStatuses.Available? "bg-dark" : "bg-danger")
                    rounded-pill"> @v.Status.ToString() </span>
                </td>
            </tr>
        }
    </tbody>
</table>

<h2>Bookings</h2>
<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">RegNo</th>
            <th scope="col">Customer</th>
            <th scope="col">KM rented</th>

            <th scope="col">KM returned</th>
            <th scope="col">Rented</th>
            <th scope="col">Returned</th>

            <th scope="col">Cost</th>
            <th scope="col">Status</th>
        </tr>
    </thead>
    <tbody>
        @foreach (IBooking b in bp.GetBookings())
        {
            <tr>
                <td class="fw-bold">@b.Vehicle.RegNo</td>
                <td>@b.Customer.FirstName @b.Customer.LastName (@b.Customer.SSN)</td>
                <td>@b.KmStart</td>

                <td>@b.KmReturn</td>
                <td>@b.Rented.ToShortDateString()</td>
                <td>@b.Returned?.ToShortDateString()</td>

                <td>@b.Cost</td>
                <td><span class="badge bg-@(b.Status == VehicleStatuses.Available? "success" : "danger")">@b.Status</span></td>
            </tr>
        }
    </tbody>
</table>


<h2>Customers</h2>
<table class="table table-striped">
    <thead>
        <tr>
            <th scope="col">SSN</th>
            <th scope="col">Last Name</th>
            <th scope="col">First Name</th>
        </tr>

    </thead>
    <tbody>
        <tr>
            <td class="ps-0">
                <input id="ssn" type="text" class="form-control" @bind=newCustomer.SSN />
            </td>
            <td class="ps-0">
                <input id="lastName" type="text" class="form-control" @bind=newCustomer.LastName />
            </td>
            <td class="ps-0 d-inline-flex w-100">
                <input id="firstName" type="text" class="form-control" @bind=newCustomer.FirstName />
                <button type="button" class="btn btn-success" @onclick=@AddCustomer>
                    Add
                </button>
            </td>
        </tr>
        @foreach (Customer c in bp.GetCustomers())
        {
            <tr>
                <td class="fw-bold">@c.SSN</td>
                <td>@c.LastName</td>
                <td>@c.FirstName</td>
            </tr>
        }
    </tbody>
</table>

@code {
    Customer newCustomer = new();

    protected override void OnInitialized()
    {
        //...
    }

    void AddCustomer()
    {
        if (Valid(newCustomer.SSN) && Valid(newCustomer.FirstName) && Valid(newCustomer.LastName))
        {
            bp.AddCustomer(newCustomer);
            newCustomer = new();
        }
    }

    private bool Valid(string str)
    {
        return !string.IsNullOrEmpty(str);
    }
}


